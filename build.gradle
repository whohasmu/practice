plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

repositories {
    mavenCentral()
}

dependencies {

    // jsp
    implementation "org.apache.tomcat.embed:tomcat-embed-jasper"

    // DB - mysql
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.12'
    implementation 'org.springframework:spring-jdbc'
    implementation 'mysql:mysql-connector-java'

    // Springboot
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.12'
    implementation 'org.springframework.boot:spring-boot-starter-web-services:2.5.12'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.5.12'

    implementation 'org.springframework.boot:spring-boot-starter:2.5.12'

    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'practice'
java.sourceCompatibility = JavaVersion.VERSION_1_8

/**
 * SpringBoot 프로젝트가 build 될 때 React 프로젝트가 먼저 build되고,
 * 결과물을 SpringBoot 프로젝트 build 결과물에 포함시킨다
 */

def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
    main {
        resources { srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "audit", "fix"
        commandLine 'npm.cmd', 'install' }
    else {
        commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
    }
}

task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run-script", "build"
    } else {
        commandLine "npm", "run-script", "build"
    }
}

task copyReactBuildFiles(type: Copy) {
    dependsOn "buildReact"
    from "$frontendDir/build"
    into "$projectDir/src/main/resources/static"
}


